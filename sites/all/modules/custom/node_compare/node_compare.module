<?php
/**
 * Implements hook_permission().
 */
function node_compare_permission() {
  return array(
    'access compare' => array(
      'title' => t('Access Compare'),
    ),
  );
}

/*
 * Implement HOOK_menu 
 */
function node_compare_menu() {
  $items['compare/compare_schools'] = array(
    'title' => 'Compare Schools',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('compare_schools_autocomplate'),
    'access arguments' => array('access compare'),
  );
  $items['compare/node_autocomplete'] = array(
    'page callback' => 'compare_schools_autocomplate_callback',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access compare'),
  );
  $items['progress_sheet_template_generator_form'] = array(
    'title' => 'Progress Sheet Template Generator',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('progress_sheet_template_generator'),
    'access arguments' => array('access compare'),
  );
  return $items;
}

/*
 * 
 */
function compare_schools_autocomplate($form, &$form_state) {
  $form = array();
  for($i=1; $i<=4; $i++) {
    $form['school'.$i] = array(
      '#type' => 'textfield', 
  		'#title' => t('School '.$i), 
      '#size' => 60, 
      '#maxlength' => 128,
      '#autocomplete_path' => 'compare/node_autocomplete',
    );
  }
  
  $form['actions'] = array(
    '#type' => 'actions'
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Compare Schools'),
  );
  
  return $form;
}

function compare_schools_autocomplate_validate($form, &$form_state) {
  $matches = $validate = array();
  for($i=1; $i<=4; $i++) {
    $title = $form_state['values']['school'.$i];
    $result = preg_match('/\[([0-9]+)\]$/', $title, $matches);
    $form_state['values']['school'.$i] = ($result == 0) ? 0 : $matches[$result];
    if($form_state['values']['school'.$i] != 0) {
      $validate['school'.$i] = $form_state['values']['school'.$i];
    }
  }
  if(count($validate) < 2) {
    form_set_error('file', t('Please select atleast 2 schools.'));
  }
  
}

function compare_schools_autocomplate_submit($form, &$form_state) {
  //pr($form_state); die('In submit');
  $schoolIds = array();
  for($i=1; $i<=4; $i++) {
    $schoolIds[] = ($form_state['values']['school'.$i] != '') ? $form_state['values']['school'.$i] : 0;
  }
  $schoolIds = implode(',', $schoolIds);
  drupal_goto('compare-schools/'.$schoolIds);
}

/*
 * 
 */
function compare_schools_autocomplate_callback($string = '') {
  $matches = array();
  if ($string) {
    $result = db_select('node')
      ->fields('node', array('nid', 'title'))
      ->condition('title', db_like($string) . '%', 'LIKE')
      ->condition('type', 'school', '=')
      ->range(0, 10)
      ->execute();
    foreach ($result as $node) {
      $matches[$node->title . " [$node->nid]"] = check_plain($node->title);
    }
  }
  
  drupal_json_output($matches);
}

function progress_sheet_template_generator($form, &$form_state) {
    global $user;
    //$exams = array('0'=> 'Without Exam');
    $result = db_select('node')
      ->fields('node', array('nid', 'title'))
      ->condition('type', 'examination', '=')
      ->condition('uid', $user->uid, '=')
      ->range(0, 10)
      ->execute();
    foreach ($result as $node) {
      $exams[$node->nid] = check_plain($node->title);
    }
  $form['exam'] = array(
      '#type' => 'select', 
  		'#title' => t('Examination'), 
      '#options' => $exams, 
      '#description' => t('Select exam to generate template for progress sheet bulk upload.'),
    );
    
    // Classes
    $exams = array();
    $result = db_select('node')
      ->fields('node', array('nid', 'title'))
      ->condition('type', 'classes', '=')
      ->condition('uid', $user->uid, '=')
      ->range(0, 10)
      ->execute();
    foreach ($result as $node) {
      $exams[$node->nid] = check_plain($node->title);
    }
  $form['class'] = array(
      '#type' => 'select', 
  		'#title' => t('Class'), 
      '#options' => $exams, 
      '#description' => t('Select class to generate template for progress sheet bulk upload.'),
    );
    
    
  
  $form['actions'] = array(
    '#type' => 'actions'
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  
  return $form;
}

function progress_sheet_template_generator_submit($form, &$form_state) {
  //pr('progress-sheet-bulk-upload-template-generator/' . $form_state['values']['exam']  . '/' . $form_state['values']['class']); die;
  drupal_goto('progress-sheet-bulk-upload-template-generator/' . $form_state['values']['exam']  . '/' . $form_state['values']['class']);
}

//compare_auto_complete();